<script>
  var isSignupMode = true;
  var isLoggedIn = false;
  var users = {};

  function followingButtonClicked() {
    if (isLoggedIn) {
      // User is logged in, perform the new function
      highlightFollowedEvents();
    } else {
      // User is not logged in, show the modal
      toggleModal("followingModal", event);
    }
  }
  function switchMode() {
    var form = document.getElementById("authForm");
    var submitButton = document.getElementById("submit");
    var switchButton = document.getElementById("switchMode");

    if (isSignupMode) {
      form.setAttribute("action", "/users/login");
      submitButton.setAttribute("value", "Login");
      switchButton.textContent = "Switch to Sign Up";
    } else {
      form.setAttribute("action", "/users/register");
      submitButton.setAttribute("value", "Sign Up");
      switchButton.textContent = "Switch to Login";
    }

    isSignupMode = !isSignupMode;
  }

  //will work along side with backend code to check if the users log in details are correct and will take the message from the backend and display it to the user onb
  function handleFormSubmit(event) {
    event.preventDefault(); // Prevent the form from submitting normally
    var email = document.getElementById("email").value;
    var password = document.getElementById("password").value;

    if (!isSignupMode) {
      var url = "/users/login";

      fetch(url, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ email: email, password: password }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            alert("Login successful!");
            toggleBlankModal("followingModal", event);
            isLoggedIn = true;
          } else {
            alert(data.message);
          }
        })
        .catch((error) => {
          console.error("Error:", error);
        });
    } else {
      var url = "/users/register";

      fetch(url, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ email: email, password: password }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            alert("Account created successfully!");
            isLoggedIn = true;
            closeAllModals();
          } else {
            alert(data.message);
          }
        })
        .catch((error) => {
          console.error("Error:", error);
        });
    }
  }

  function highlightFollowedEvents() {
    // For testing, show an alert or log a message to the console
    // Add the API interaction code here
  }
  function followGroup(userEmail, eventName) {
    // Assume getGroupName is a function that takes an event name and returns the associated group name and link
    const { groupName, groupLink } = getGroupName(eventName);

    // Read the existing data from the file
    fs.readFile("followedGroups.json", "utf8", (err, data) => {
      if (err) {
        console.error(`Error reading file: ${err}`);
        return;
      }

      // Parse the JSON data from the file, or start with an empty array if the file is empty
      const followedGroups = data ? JSON.parse(data) : [];

      // Check if the user is already following the group
      const isFollowing = followedGroups.some(
        (group) =>
          group.userEmail === userEmail && group.groupName === groupName
      );

      if (isFollowing) {
        console.log("The user is already following this group.");
        return;
      }

      // Add the new group to the array
      followedGroups.push({ userEmail, groupName, groupLink });

      // Write the updated data back to the file
      fs.writeFile(
        "followedGroups.json",
        JSON.stringify(followedGroups, null, 2),
        (err) => {
          if (err) {
            console.error(`Error writing file: ${err}`);
          } else {
            console.log("The group has been followed!");
          }
        }
      );
    });
  }
</script>
